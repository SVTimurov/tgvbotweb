import telebot
import requests
import json
import os
from dotenv import load_dotenv  # –ü–æ–¥–∫–ª—é—á–∞–µ–º dotenv –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å .env

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env (–µ—Å–ª–∏ –ª–æ–∫–∞–ª—å–Ω–æ) –∏–ª–∏ –∏–∑ Railway
load_dotenv()

TOKEN = os.getenv("TOKEN")  # –ë–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
API = os.getenv("API")  # –ë–µ—Ä–µ–º API-–∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–≤–æ–µ–≥–æ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.")

@bot.message_handler(commands=['autor'])
def autor(message):
    bot.send_message(message.chat.id, "–ê–≤—Ç–æ—Ä: –¢–∏–º—É—Ä –ú–µ—Ç–µ–ª–∏—Ü–∞\n–°–æ–∑–¥–∞–Ω –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–∞ 'Kabanchik'.")

@bot.message_handler(content_types=['text'])
def weather(message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –±—ã–ª –∫–æ–º–∞–Ω–¥–æ–π
    if message.text.startswith("/"):
        return

    City = message.text.strip().lower()
    url = f"https://api.openweathermap.org/data/2.5/weather?q={City}&appid={API}&units=metric"

    try:
        res = requests.get(url)
        data = res.json()

        if res.status_code == 200:
            temp = data["main"]["temp"]
            weather_desc = data["weather"][0]["description"].capitalize()
            bot.reply_to(message, f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {City.capitalize()}:\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C\n–û–ø–∏—Å–∞–Ω–∏–µ: {weather_desc}")
        else:
            bot.reply_to(message, "–û—à–∏–±–∫–∞! –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")

    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
bot.polling(none_stop=True)
